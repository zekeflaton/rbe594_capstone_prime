controller_manager:
  ros__parameters:
    update_rate: 30
    # use_sim_time: true

    diff_cont:
      type: diff_drive_controller/DiffDriveController

    joint_broad:
      type: joint_state_broadcaster/JointStateBroadcaster

    # piston_cont:
      # type: forward_command_controller/ForwardCommandController
        # type: effort_controllers/JointPositionController
      # type: position_controllers/JointPositionController

    forward_position_controller:
      type: position_controllers/JointGroupPositionController

    # piston_cont:

    #   type: joint_trajectory_controller/JointTrajectoryController

    piston_vel_cont:
      type: velocity_controllers/JointGroupVelocityController

diff_cont:
  ros__parameters:

    publish_rate: 50.0

    base_frame_id: base_link

    left_wheel_names: ['left_wheel_joint']
    right_wheel_names: ['right_wheel_joint']
    wheel_separation: 0.396
    wheel_radius: 0.0407

    use_stamped_vel: false

    # open_loop: false

    # wheels_per_side: x
    # wheel_separation_multiplier: x
    # left_wheel_radius_multiplier: x
    # right_wheel_radius_multiplier: x

    odom_frame_id: odom
    # pose_covariance_diagonal: x
    # twist_covariance_diagonal: x
    # open_loop: x
    # enable_odom_tf: x

    # cmd_vel_timeout: x
    # publish_limited_velocity: x
    # velocity_rolling_window_size: x


    # linear.x.has_velocity_limits: false
    # linear.x.has_acceleration_limits: false
    # linear.x.has_jerk_limits: false
    # linear.x.max_velocity: NAN
    # linear.x.min_velocity: NAN
    # linear.x.max_acceleration: NAN
    # linear.x.min_acceleration: NAN
    # linear.x.max_jerk: NAN
    # linear.x.min_jerk: NAN

    # angular.z.has_velocity_limits: false
    # angular.z.has_acceleration_limits: false
    # angular.z.has_jerk_limits: false
    # angular.z.max_velocity: NAN
    # angular.z.min_velocity: NAN
    # angular.z.max_acceleration: NAN
    # angular.z.min_acceleration: NAN
    # angular.z.max_jerk: NAN
    # angular.z.min_jerk: NAN




# joint_broad:
#   ros__parameters:



# piston_cont:
#   ros__parameters:

#     joints: ['joint_piston']
#     interface_name: position
#     pid:
#       p: .1
#       i: .1
#       d: 0
    # constraints:
    #   stopped_velocity_tolerance: 0.01 # Defaults to 0.01
    #   goal_time: 0.0 # Defaults to 0.0 (start immediately)

# piston_cont:
#   ros__parameters:
#     joint_name: joint_piston
#     # command_topic: /joint_states
#     position: 0.04
#     velocity: 0.1
#     acceleration: 0.2

forward_position_controller:
  ros__parameters:
    joints: ['joint_piston']
    pid:
      p: 10000
      i: 10000
      d: 0

piston_cont:
  ros__parameters:
    joints: ['joint_piston']
    command_interfaces: ['position']
    state_interfaces:
      - position
      - velocity

    allow_partial_joints_goal: true

    # Name of the joint being controlled
      # joint_name: "joint_piston"

    # Configuration for the PID controller used by the JointTrajectoryController
    pid:
      # Proportional gain
      p: 100.0

      # Integral gain
      i: 0.1

      # Derivative gain
      d: 10.0

      # Anti-windup gain
      i_clamp: 1.0

    # Configuration for the JointTrajectoryController
    trajectory:
      # Publishes current state of controller at this rate
      state_publish_rate: 50

      # Interpolation time for trajectory points
      # This is the time that the joint will take to move
      # between each point in the trajectory
      # You can adjust this value based on the speed you want
      # the joint to move at.
      # In this case, the joint will move to the target position
      # in 1 second.
      interpolation_factor: 1.0

      # List of trajectory points
      points:
        # The first point in the trajectory is the current position
        - positions: [0.0]
          velocities: [0.0]
          time_from_start: {sec: 0, nanosec: 0}

        # The second point in the trajectory is the target position
        - positions: [0.04]
          velocities: [0.0]
          time_from_start: {sec: 1, nanosec: 0}

piston_vel_cont:
  ros__parameters:
    joints: ['joint_piston']
    # interface_name: velocity
